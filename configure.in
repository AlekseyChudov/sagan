#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_INIT
AC_CONFIG_SRCDIR([src])
AC_CANONICAL_SYSTEM


#VERSION=`cat $srcdir/version.h | grep "#define VERSION " | sed -e 's/^.*\"\(.*\)\"/\1/'`

VERSION=`cat src/version.h | grep "#define VERSION " | sed -e 's/^.*\"\(.*\)\"/\1/'`

AC_ARG_ENABLE(mysql,
  [  --disable-mysql         Disable MySQL support.],
  [ MYSQL="$enableval"],
  [ MYSQL="yes" ]
)

AC_ARG_ENABLE(postgresql,
  [  --disable-postgresql    Disable PostgreSQL support.],
  [ POSTGRES="$enableval"],
  [ POSTGRES="yes" ]
)

AC_ARG_ENABLE(esmtp,
  [  --disable-esmtp	  Disable libesmtp support.],
  [ ESMTP="$enableval"],
  [ ESMTP="yes" ]
)

AC_SUBST(VERSION)
AM_INIT_AUTOMAKE(sagan, ${VERSION})
AC_CONFIG_HEADER(config.h)

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_LANG_C
AC_PROG_MAKE_SET

# Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT

AC_CHECK_HEADERS([stdio.h stdlib.h sys/types.h unistd.h pthread.h ctype.h errno.h fcntl.h sys/stat.h string.h getopt.h time.h pcre.h mysql/mysql.h stdarg.h limits.h arpa/inet.h netinet/in.h sys/time.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME

# Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_SELECT_ARGTYPES
AC_FUNC_STAT
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_FUNC_FORK
AC_FUNC_REALLOC
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_TM

AC_CHECK_FUNCS([select strstr strchr strcmp strlen sizeof write snprintf strncat strlcat strlcpy getopt_long gethostbyname socket htons connect send recv dup2 strspn strdup])

AC_CHECK_LIB(pcre, main,,AC_MSG_ERROR(Sagan needs PCRE installed.  Please see http://www.pcre.org.))
AC_CHECK_LIB(pthread, main,,AC_MSG_ERROR(Sagan needs pthreads!))
AC_CHECK_LIB(m, main,,AC_MSG_ERROR(Sagan needs libm!))

if test "$MYSQL" = "yes"; then
	AC_MSG_RESULT([------- MySQL Support is enabled -------])
	AC_CHECK_HEADER([mysql/mysql.h])
	AC_CHECK_LIB(mysqlclient_r, main,,AC_MSG_ERROR(The MySQL library libmysqlclient_r is missing!
	If you're not interested in MySQL support use the --disable-mysql flag.))
	fi

if test "$POSTGRES" = "yes"; then
       AC_MSG_RESULT([------- PostgreSQL support is enabled -------])
       AC_CHECK_HEADER([libpq-fe.h])
       AC_CHECK_LIB(pq, main,,AC_MSG_ERROR(The PostgreSQL library cannot be found.
If you're not interested in PostgreSQL support use the --disable-postgresql flag.))
       fi

if test "$ESMTP" = "yes"; then
       AC_MSG_RESULT([------- libesmtp support is enabled -------])
       AC_CHECK_HEADER([libesmtp.h])
       AC_CHECK_LIB(esmtp, main,,AC_MSG_ERROR(The libesmtp library cannot be found.
If you're not interested in libesmtp support use the --disable-esmtp flag.))
       fi

test "x$prefix" = x. || test "x$prefix" = xNONE && prefix=/usr/local
AC_DEFINE_UNQUOTED(CONFIG_FILE_PATH, "`eval echo "${prefix}/etc/sagan.conf"`", [Sagan configuration file]) 

AC_DEFINE_UNQUOTED(PACKAGE_NAME, "sagan" )
AC_DEFINE_UNQUOTED(PACKAGE_STRING, "Sagan $VERSION")
AC_DEFINE_UNQUOTED(PACKAGE_BUGREPORT, "sagan@mailman.softwink.com" )
AC_DEFINE_UNQUOTED(PACKAGE_TARNAME, "sagan" )
AC_DEFINE_UNQUOTED(PACKAGE_VERSION, "$VERSION" )

AC_CONFIG_FILES([ \
Makefile \
src/Makefile])


# AC_OUTPUT(Makefile)
AC_OUTPUT

AC_MSG_RESULT([])
AC_MSG_RESULT([  ,-._,-.    Sagan has been configured!])
AC_MSG_RESULT([  \/)"(\/ ])
AC_MSG_RESULT([   (_o_)     Champ Clark III & The Softwink Team: http://www.softwink.com])
AC_MSG_RESULT([   /   \/)   Copyright (C) 2009-2010 Softwink, Inc., et al.])
AC_MSG_RESULT([  (|| ||) ])
AC_MSG_RESULT([   oo-oo  ]) 
AC_MSG_RESULT([])







